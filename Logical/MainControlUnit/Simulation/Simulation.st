(********************************************************************
 * COPYRIGHT --  
 ********************************************************************
 * Program: Simulation
 * File: Simulation.st
 * Author: jorkes
 * Created: July 08, 2014
 ********************************************************************
 * Implementation of program Init
 ********************************************************************)

PROGRAM _INIT
	typEncPuls1.tiHigh := tiEncPulsShort;
	typEncPuls1.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsShort;
	
	typEncPuls2.tiHigh := tiEncPulsShort;
	typEncPuls2.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsShort;	
END_PROGRAM


PROGRAM _CYCLIC
	typEncPuls1(enable := bGblSimulation, sysTim := systemTime);
	typEncPuls2(enable := bGblSimulation, sysTim := systemTime);
	
	// In simulation the pulses are generated by the above function.
	IF bGblSimulation THEN
		MCU.typIN.bEncPuls1 := typEncPuls1.bOutput;
		MCU.typIN.bEncPuls2 := typEncPuls2.bOutput;		
	END_IF
		
	IF SHFTREG.typCounters.bStartChainCntr THEN
		IF  SHFTREG.typCounters.usChainCounter >= (SHFTREG.uiGripperCnt - 1) THEN
			typEncPuls1.tiHigh := tiEncPulsLong;
			typEncPuls1.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsLong;
		ELSE
			typEncPuls1.tiHigh := tiEncPulsShort;
			typEncPuls1.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsShort;
		END_IF
	ELSE
		IF  SHFTREG.typCounters.usStartUpCntr >= 10 THEN
			typEncPuls1.tiHigh := tiEncPulsLong;
			typEncPuls1.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsLong;
		ELSE
			typEncPuls1.tiHigh := tiEncPulsShort;
			typEncPuls1.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsShort;
		END_IF
	END_IF
		
	IF SHFTREG.typCounters.usChainCounter = SHFTREG.typEncoder.uiEncSensorPosition2 THEN //Aantal grijpers tussen eerste en tweede encoder.
		typEncPuls2.tiHigh := tiEncPulsLong;
		typEncPuls2.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsLong;
	ELSE
		typEncPuls2.tiHigh := tiEncPulsShort;
		typEncPuls2.tiLow := SHFTREG.tiDistanceBetweenGrippers - tiEncPulsShort;
	END_IF
	
	//4 x cam & light triggers
	//Sensor_0(trigger := MCU.typIN.bEncPuls1, tiPuls := tiPulsCam, tiDelay := tiDelayCam_0);
	//Sensor_1(trigger := MCU.typIN.bEncPuls1, tiPuls := tiPulsCam, tiDelay := tiDelayCam_1);
	//Sensor_2(trigger := MCU.typIN.bEncPuls1, tiPuls := tiPulsCam, tiDelay := tiDelayCam_2);
	//Sensor_3(trigger := MCU.typIN.bEncPuls1, tiPuls := tiPulsCam, tiDelay := tiDelayCam_3);
	
	//MCU.typOUT.bCamTrigger1 := Sensor_0.outCam;
	//MCU.typOUT.bCamTrigger2 := Sensor_1.outCam;
	//MCU.typOUT.bCamTrigger3 := Sensor_2.outCam;
	//MCU.typOUT.bCamTrigger4 := Sensor_3.outCam;
	
	//MCU.typOUT.bLightTrigger1 := Sensor_0.outLight;
	//MCU.typOUT.bLightTrigger2 := Sensor_1.outLight;
	//MCU.typOUT.bLightTrigger3 := Sensor_2.outLight;
	//MCU.typOUT.bLightTrigger4 := Sensor_3.outLight;
END_PROGRAM
